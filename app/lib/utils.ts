import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"
import { SQLEvent, Event, FormData, Registrations, SQLRegistrations, Partner, Tag } from "./types";
import { v4 as uuidv4 } from 'uuid';


// MARK: Formatting and Sorting helper functions

export function validateEvent(formData: FormData): string | undefined {
	// Validate Date
	const { day, month, year } = formData.date;
	const date = new Date(year, month - 1, day); // month is zero-indexed
	if (date.getMonth() + 1 !== Number(month) || date.getDate() !== Number(day)) {
		return "Invalid date selected!"
	}

	// Validate Time
	const { startHour, startMinute, endHour, endMinute } = formData.time;
	const startTime = new Date(year, month - 1, day, Number(startHour), Number(startMinute));
	const endTime = new Date(year, month - 1, day, Number(endHour), Number(endMinute));

	if (startTime > endTime) {
		return "Timings are invalid!"
	}

	if (!formData.title || !formData.organiser) {
		return "Title and organiser are required!"
	}

	// Validate ticket price
    if (formData?.tickets_price && formData?.tickets_price !== '') {
        const ticketsPrice = formData.tickets_price;
        const priceNumber = Number(ticketsPrice);

        if (typeof ticketsPrice !== 'string' || isNaN(priceNumber) || !/^\d+(\.\d{1,2})?$/.test(ticketsPrice)) {
            return "Invalid ticket price!";
        }

        // Ensure the price is greater than 0.30 or is exactly '0'
        if (priceNumber !== 0 && priceNumber < 0.30) {
            return "Ticket price must be greater than 30p or exactly 0.";
        }

		// Ensure payments are enabled for the society
		
    }

	return undefined; // valid data
}

export function createEventObject(data: FormData): Event {
	return {
		id: "",
		title: data.title,
		description: data.description,
		organiser: data.organiser,
		time: `${data.time.startHour}:${data.time.startMinute} - ${data.time.endHour}:${data.time.endMinute}`,
		date: `${data.date.day}/${data.date.month}/${data.date.year}`,
		location_building: data.location.building,
		location_area: data.location.area,
		location_address: data.location.address,
		image_url: data.selectedImage,
		image_contain: data.image_contain,
		event_type: data.event_tag || 0, 
		capacity: data.capacity,
		sign_up_link: data.signupLink || undefined,
		for_externals: data.forExternals || undefined,
	};
}

export async function createSQLEventObject(data: FormData): Promise<SQLEvent> {
	return {
		id: "", // Generated by Postgres
		title: data.title,
		description: data.description,
		organiser: data.organiser,
		organiser_uid: data.organiser_uid,
		start_time: `${data.time.startHour}:${data.time.startMinute}`,
		end_time: `${data.time.endHour}:${data.time.endMinute}`,
		day: data.date.day,
		month: data.date.month,
		year: data.date.year,
		location_building: data.location.building,
		location_area: data.location.area,
		location_address: data.location.address,
		image_url: data.selectedImage,
		image_contain: data.image_contain,
		capacity: data.capacity || undefined,
		event_type: data.event_tag || 0,
		sign_up_link: data.signupLink || undefined,
		for_externals: data.forExternals || undefined,
		tickets_price: data.tickets_price || '0',
	};
	
}

export const LondonUniversities = [
	"Imperial College London", "King's College London", "University College London", "City, University of London", 
	"Birkbeck, University of London", "Brunel University", "Goldsmiths, University of London", "London Business School", 
	"Kingston University", "London School Of Economics (LSE)", "London South Bank University", "University Of Westminster", 
	"SOAS, University Of London", "Royal Veterinary College", "Royal Holloway, University of London", "Royal College of Art", 
	"Queen Mary University Of London", "Middlesex University", "University Of Greenwich", "University Of Roehampton", 
	"University of the Arts London", "Courtauld Institute of Art",
	"Other (please specify)"
]

export const PartnerLogos = [
	{ src: '/partners/LSEULaw.png', name: 'LSEU Law Society' },
	{ src: '/partners/GlobalChina.png', name: 'Global China and Asia Study Society' },
	{ src: '/partners/RSA_logo.png', name: 'RSA' },
	{ src: '/partners/ROAR.png', name: 'ROAR news' },
	{ src: '/partners/KnownImpact.png', name: 'Known Impact' },
	{ src: '/partners/KCLPolitics.png', name: 'KCL Politics' },
	{ src: '/partners/ICLEnt.jpeg', name: 'ICL Entrepreneurs' },
	{ src: '/partners/AmericanPol.png', name: 'American Politics Society' },
	{ src: '/partners/GreenFinance.png', name: 'Green Finance' },
	{ src: '/partners/KCLBackpackers.webp', name: 'KCL Backpackers' },
	{ src: '/partners/KCLUN.png', name: 'KCL UN Women' },
	{ src: '/partners/KCLArmy.png', name: 'KCL Army' },
	{ src: '/partners/LSEAmicus.png', name: 'Amicus LSE' }
]

export const SocietyLogos = [
	{ name: "London Student Network", src: '/societies/LSN.png' },
	{ name: "Roar News", src: '/societies/roar.png' },
	{ name: "KCL Politics Society", src: '/societies/kcl-politics.png' },
	{ name: "Imperial College Neurotech Society", src: '/societies/icl-neurotech.png' },
	{ name: "Imperial College Radio Society", src: '/societies/ic-radio.svg' },
	{ name: "KCL Neurotech Society", src: '/societies/kcl-neurotech.jpeg' },
	{ name: "LSE SU European Society", src: '/societies/LSN.png' },
	{ name: "Global China and Asia Study Society", src: '/societies/LSN.png' },
	{ name: "Imperial College Finance Society", src: '/societies/LSN.png' },
	{ name: "Amicus UCL", src: '/societies/lse-amicus.png' },
	{ name: "KCL American Politics Society", src: '/societies/kcl-am-politics.png' },
	{ name: "Political Engagement and Activism Society", src: '/societies/LSN.png' },
	{ name: "EISKA (European and International Studies King's Association)", src: '/societies/LSN.png' },
	{ name: "KCL Backpackers", src: '/societies/LSN.png' },
	{ name: "KCL History Society", src: '/societies/LSN.png' },
	{ name: "KCL War Studies", src: '/societies/LSN.png' },
	{ name: "Boundless Compassion Charity Support", src: '/societies/LSN.png' },
	{ name: "KCL Football (Men's)", src: '/societies/kcl-mens-football.png' },
	{ name: "Women and Politics", src: '/societies/LSN.png' },
	{ name: "KCL European Society", src: '/societies/LSN.png' },
	{ name: "KCL Political Economy Society", src: '/societies/LSN.png' },
	{ name: "Imperial College Film Society", src: '/societies/LSN.png' },
	{ name: "LSESU Entrepreneurs", src: '/societies/LSN.png' },
	{ name: "Imperial Entrepreneurs", src: '/societies/icl-entre.png' },
	{ name: "KCL Liberal Democrats", src: '/societies/LSN.png' },
	{ name: "KCL Think Tank", src: '/societies/LSN.png' },
	{ name: "Student Startups UK", src: '/societies/student-startups-uk.png' },
	{ name: "American Society University of Westminster ", src: '/societies/LSN.png' },
	{ name: "Imperial College Law Society", src: '/societies/icl-law.png' },
	{ name: "European Affairs Institute", src: '/societies/LSN.png' },
]

export function returnLogo(organiser: string): { found: boolean, src?: string } {
	const logo = SocietyLogos.find(logo => logo.name === organiser);
	if (logo) {
		return { found: true, src: logo.src };
	}
	return { found: false };
}


export const placeholderImages = [
	{ src: '/images/placeholders/lecture-hall-1.jpg', name: 'Lecture'},
	{ src: '/images/placeholders/teaching.jpg', name: 'Education'},
	{ src: '/images/placeholders/social.jpg', name: 'Social Gathering'},
	{ src: '/images/placeholders/running.jpg', name: 'Sports'},
	{ src: '/images/placeholders/band-practice.jpg', name: 'Music Practice'},
	{ src: '/images/placeholders/brainstorm.jpg', name: 'Brainstorm'},
	{ src: '/images/placeholders/pub.jpg', name: 'Pub'},
	{ src: '/images/placeholders/football.jpg', name: 'Football'},
]

export const FallbackStatistics = {
	total_events: '90',
	total_universities: '20',
	total_societies: '50'
}

export function generateToken(): string {
	const token = uuidv4();

	if (!token) {
		console.error('Failed to generate token');
		throw new Error('Failed to generate token');
	}

	return token;
}
